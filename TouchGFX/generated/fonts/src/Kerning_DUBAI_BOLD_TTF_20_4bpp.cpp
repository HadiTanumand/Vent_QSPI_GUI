#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_DUBAI_BOLD_TTF_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0631,  1 },  // (First char = [0x0631, uni0631], Second char = [0x0028, parenleft], Kerning dist = 1)
    { 0x0632,  1 },  // (First char = [0x0632, uni0632], Second char = [0x0028, parenleft], Kerning dist = 1)
    { 0xFEAE,  1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0x0028, parenleft], Kerning dist = 1)
    { 0xFEB0,  1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0x0028, parenleft], Kerning dist = 1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x002E, period], Kerning dist = 1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x002E, period], Kerning dist = -1)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x002E, period], Kerning dist = 1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x002E, period], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x002E, period], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x003A, colon], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x003A, colon], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x003F, question], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x003F, question], Kerning dist = -1)
    { 0x003F, -1 },  // (First char = [0x003F, question], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0047, G], Kerning dist = -1)
    { 0x002E,  1 },  // (First char = [0x002E, period], Second char = [0x004A, J], Kerning dist = 1)
    { 0x003A,  1 },  // (First char = [0x003A, colon], Second char = [0x004A, J], Kerning dist = 1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0050, -1 },  // (First char = [0x0050, P], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x004A, J], Kerning dist = -2)
    { 0x0066, -1 },  // (First char = [0x0066, f], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x004A, J], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0054, T], Kerning dist = -1)
    { 0x003A, -1 },  // (First char = [0x003A, colon], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0061, -2 },  // (First char = [0x0061, a], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0063, -2 },  // (First char = [0x0063, c], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0068, -2 },  // (First char = [0x0068, h], Second char = [0x0054, T], Kerning dist = -2)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0054, T], Kerning dist = -1)
    { 0x006D, -2 },  // (First char = [0x006D, m], Second char = [0x0054, T], Kerning dist = -2)
    { 0x006E, -2 },  // (First char = [0x006E, n], Second char = [0x0054, T], Kerning dist = -2)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0071, -2 },  // (First char = [0x0071, q], Second char = [0x0054, T], Kerning dist = -2)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0054, T], Kerning dist = -1)
    { 0x007A, -1 },  // (First char = [0x007A, z], Second char = [0x0054, T], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0062, -1 },  // (First char = [0x0062, b], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0065, -1 },  // (First char = [0x0065, e], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x0056, V], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0056, V], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x0056, V], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, n], Second char = [0x0056, V], Kerning dist = -1)
    { 0x006F, -1 },  // (First char = [0x006F, o], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0070, -1 },  // (First char = [0x0070, p], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0071, -1 },  // (First char = [0x0071, q], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0079, -1 },  // (First char = [0x0079, y], Second char = [0x0058, X], Kerning dist = -1)
    { 0x002E, -2 },  // (First char = [0x002E, period], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x003A, -1 },  // (First char = [0x003A, colon], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0051, -1 },  // (First char = [0x0051, Q], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0052, -1 },  // (First char = [0x0052, R], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0061, -1 },  // (First char = [0x0061, a], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0062, -2 },  // (First char = [0x0062, b], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0063, -1 },  // (First char = [0x0063, c], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0065, -2 },  // (First char = [0x0065, e], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0068, -1 },  // (First char = [0x0068, h], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x006B, -1 },  // (First char = [0x006B, k], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x006D, -1 },  // (First char = [0x006D, m], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x006E, -1 },  // (First char = [0x006E, n], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x006F, -2 },  // (First char = [0x006F, o], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0070, -2 },  // (First char = [0x0070, p], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0071, -1 },  // (First char = [0x0071, q], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0072, -1 },  // (First char = [0x0072, r], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0073, -1 },  // (First char = [0x0073, s], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0075, -1 },  // (First char = [0x0075, u], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0076, -1 },  // (First char = [0x0076, v], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0077, -1 },  // (First char = [0x0077, w], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0078, -1 },  // (First char = [0x0078, x], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0061, a], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0063, c], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0064, d], Kerning dist = -2)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0065, e], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0057, -1 },  // (First char = [0x0057, W], Second char = [0x0067, g], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0067, g], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x006D, m], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x006F, o], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0054, -2 },  // (First char = [0x0054, T], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0059, -2 },  // (First char = [0x0059, Y], Second char = [0x0071, q], Kerning dist = -2)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0075, u], Kerning dist = -1)
    { 0x002E, -1 },  // (First char = [0x002E, period], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0076, v], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0076, v], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0078, x], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0079, y], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0079, y], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0058, -1 },  // (First char = [0x0058, X], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0054, -1 },  // (First char = [0x0054, T], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0056, -1 },  // (First char = [0x0056, V], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0059, -1 },  // (First char = [0x0059, Y], Second char = [0x007A, z], Kerning dist = -1)
    { 0x0623,  1 },  // (First char = [0x0623, uni0623], Second char = [0x0623, uni0623], Kerning dist = 1)
    { 0x0625,  1 },  // (First char = [0x0625, uni0625], Second char = [0x0623, uni0623], Kerning dist = 1)
    { 0x0627,  1 },  // (First char = [0x0627, uni0627], Second char = [0x0623, uni0623], Kerning dist = 1)
    { 0xFE84,  1 },  // (First char = [0xFE84, uniFE84], Second char = [0x0623, uni0623], Kerning dist = 1)
    { 0xFE88,  1 },  // (First char = [0xFE88, uniFE88], Second char = [0x0623, uni0623], Kerning dist = 1)
    { 0xFEF7,  1 },  // (First char = [0xFEF7, uniFEF7], Second char = [0x0623, uni0623], Kerning dist = 1)
    { 0xFEF8,  1 },  // (First char = [0xFEF8, uniFEF8], Second char = [0x0623, uni0623], Kerning dist = 1)
    { 0x0623,  1 },  // (First char = [0x0623, uni0623], Second char = [0x0625, uni0625], Kerning dist = 1)
    { 0x0625,  1 },  // (First char = [0x0625, uni0625], Second char = [0x0625, uni0625], Kerning dist = 1)
    { 0x0627,  1 },  // (First char = [0x0627, uni0627], Second char = [0x0625, uni0625], Kerning dist = 1)
    { 0xFE84,  1 },  // (First char = [0xFE84, uniFE84], Second char = [0x0627, uni0627], Kerning dist = 1)
    { 0xFE88,  1 },  // (First char = [0xFE88, uniFE88], Second char = [0x0627, uni0627], Kerning dist = 1)
    { 0xFEF7,  1 },  // (First char = [0xFEF7, uniFEF7], Second char = [0x0627, uni0627], Kerning dist = 1)
    { 0xFEF8,  1 },  // (First char = [0xFEF8, uniFEF8], Second char = [0x0627, uni0627], Kerning dist = 1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0629, uni0629], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x062F, uni062F], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0630, uni0630], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0631, uni0631], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0633, uni0633], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0634, uni0634], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0x0635, uni0635], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0x0635, uni0635], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0x0635, uni0635], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0x0635, uni0635], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0635, uni0635], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0x0636, uni0636], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0x0636, uni0636], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0x0636, uni0636], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0x0636, uni0636], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0636, uni0636], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0x0637, uni0637], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0x0637, uni0637], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0x0637, uni0637], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0x0637, uni0637], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0637, uni0637], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0x0638, uni0638], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0x0638, uni0638], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0x0638, uni0638], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0x0638, uni0638], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0638, uni0638], Kerning dist = -1)
    { 0xFECA,  1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0639, uni0639], Kerning dist = 1)
    { 0xFECA,  1 },  // (First char = [0xFECA, uniFECA], Second char = [0x063A, uni063A], Kerning dist = 1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0x0641, uni0641], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0x0641, uni0641], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0x0641, uni0641], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0x0641, uni0641], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0641, uni0641], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0643, uni0643], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0644, uni0644], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x0647, uni0647], Kerning dist = -1)
    { 0x0623,  2 },  // (First char = [0x0623, uni0623], Second char = [0x06A9, uni06A9], Kerning dist = 2)
    { 0x0625,  2 },  // (First char = [0x0625, uni0625], Second char = [0x06A9, uni06A9], Kerning dist = 2)
    { 0x0627,  2 },  // (First char = [0x0627, uni0627], Second char = [0x06A9, uni06A9], Kerning dist = 2)
    { 0xFE84,  1 },  // (First char = [0xFE84, uniFE84], Second char = [0x06A9, uni06A9], Kerning dist = 1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0x06A9, uni06A9], Kerning dist = -1)
    { 0x0623,  2 },  // (First char = [0x0623, uni0623], Second char = [0xFB90, uniFB90], Kerning dist = 2)
    { 0x0625,  2 },  // (First char = [0x0625, uni0625], Second char = [0xFB90, uniFB90], Kerning dist = 2)
    { 0x0627,  2 },  // (First char = [0x0627, uni0627], Second char = [0xFB90, uniFB90], Kerning dist = 2)
    { 0xFE84,  1 },  // (First char = [0xFE84, uniFE84], Second char = [0xFB90, uniFB90], Kerning dist = 1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFB90, uniFB90], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFE8B, uniFE8B], Kerning dist = -1)
    { 0x0631,  1 },  // (First char = [0x0631, uni0631], Second char = [0xFE91, uniFE91], Kerning dist = 1)
    { 0x0632,  1 },  // (First char = [0x0632, uni0632], Second char = [0xFE91, uniFE91], Kerning dist = 1)
    { 0xFEAE,  1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0xFE91, uniFE91], Kerning dist = 1)
    { 0xFEB0,  1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0xFE91, uniFE91], Kerning dist = 1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFE97, uniFE97], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFE9B, uniFE9B], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0xFE9F, uniFE9F], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0xFE9F, uniFE9F], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0xFE9F, uniFE9F], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0xFE9F, uniFE9F], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFE9F, uniFE9F], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0xFEA3, uniFEA3], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0xFEA3, uniFEA3], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0xFEA3, uniFEA3], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0xFEA3, uniFEA3], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEA3, uniFEA3], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0xFEA7, uniFEA7], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0xFEA7, uniFEA7], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0xFEA7, uniFEA7], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0xFEA7, uniFEA7], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEA7, uniFEA7], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEB3, uniFEB3], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEB7, uniFEB7], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0xFEBB, uniFEBB], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0xFEBB, uniFEBB], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0xFEBB, uniFEBB], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0xFEBB, uniFEBB], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEBB, uniFEBB], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0xFEBF, uniFEBF], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0xFEBF, uniFEBF], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0xFEBF, uniFEBF], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0xFEBF, uniFEBF], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEBF, uniFEBF], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0xFEC3, uniFEC3], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0xFEC3, uniFEC3], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0xFEC3, uniFEC3], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0xFEC3, uniFEC3], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEC3, uniFEC3], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0xFEC7, uniFEC7], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0xFEC7, uniFEC7], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0xFEC7, uniFEC7], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0xFEC7, uniFEC7], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEC7, uniFEC7], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFECB, uniFECB], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0xFED3, uniFED3], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0xFED3, uniFED3], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0xFED3, uniFED3], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0xFED3, uniFED3], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFED3, uniFED3], Kerning dist = -1)
    { 0x0631, -1 },  // (First char = [0x0631, uni0631], Second char = [0xFED7, uniFED7], Kerning dist = -1)
    { 0x0632, -1 },  // (First char = [0x0632, uni0632], Second char = [0xFED7, uniFED7], Kerning dist = -1)
    { 0xFEAE, -1 },  // (First char = [0xFEAE, uniFEAE], Second char = [0xFED7, uniFED7], Kerning dist = -1)
    { 0xFEB0, -1 },  // (First char = [0xFEB0, uniFEB0], Second char = [0xFED7, uniFED7], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFED7, uniFED7], Kerning dist = -1)
    { 0x0623,  2 },  // (First char = [0x0623, uni0623], Second char = [0xFEDB, uniFEDB], Kerning dist = 2)
    { 0x0625,  2 },  // (First char = [0x0625, uni0625], Second char = [0xFEDB, uniFEDB], Kerning dist = 2)
    { 0x0627,  2 },  // (First char = [0x0627, uni0627], Second char = [0xFEDB, uniFEDB], Kerning dist = 2)
    { 0xFE84,  1 },  // (First char = [0xFE84, uniFE84], Second char = [0xFEDB, uniFEDB], Kerning dist = 1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEDB, uniFEDB], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEDF, uniFEDF], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEE3, uniFEE3], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEE7, uniFEE7], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEEB, uniFEEB], Kerning dist = -1)
    { 0x0623,  1 },  // (First char = [0x0623, uni0623], Second char = [0xFEF3, uniFEF3], Kerning dist = 1)
    { 0x0625,  1 },  // (First char = [0x0625, uni0625], Second char = [0xFEF3, uniFEF3], Kerning dist = 1)
    { 0x0627,  1 },  // (First char = [0x0627, uni0627], Second char = [0xFEF3, uniFEF3], Kerning dist = 1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEF7, uniFEF7], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEF9, uniFEF9], Kerning dist = -1)
    { 0xFECA, -1 },  // (First char = [0xFECA, uniFECA], Second char = [0xFEFB, uniFEFB], Kerning dist = -1)
};
