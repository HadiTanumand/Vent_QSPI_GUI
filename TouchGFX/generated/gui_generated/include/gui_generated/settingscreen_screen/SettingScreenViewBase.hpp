/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SETTINGSCREENVIEWBASE_HPP
#define SETTINGSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/settingscreen_screen/SettingScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>

class SettingScreenViewBase : public touchgfx::View<SettingScreenPresenter>
{
public:
    SettingScreenViewBase();
    virtual ~SettingScreenViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Container container_settingScreen;
    touchgfx::Box BG_setting;
    touchgfx::Button BackToMainButton;
    touchgfx::Button alarmButton;
    touchgfx::TextAreaWithOneWildcard text_alarms;
    touchgfx::TextArea arb_text_alarms;
    touchgfx::Button deviceButton;
    touchgfx::TextAreaWithTwoWildcards text_deviceS;
    touchgfx::TextArea arb_text_deviceS;
    touchgfx::Button PatientInfoButton;
    touchgfx::TextArea text_patientInfo;
    touchgfx::TextArea arb_text_patientInfo;
    touchgfx::Image choose_backSetting;
    touchgfx::Button ventSettingButton;
    touchgfx::TextArea text_ventSetting;
    touchgfx::TextArea arb_text_ventSetting;
    touchgfx::Button trendsButton;
    touchgfx::TextAreaWithOneWildcard text_trends;
    touchgfx::TextArea arb_text_trends;
    touchgfx::Button deviceInfoButton;
    touchgfx::TextArea text_deviceInfo;
    touchgfx::TextArea arb_text_deviceInfo;
    touchgfx::Button circuitSettingButton;
    touchgfx::TextArea text_circuitSetting;
    touchgfx::TextArea arb_text_circuitSetting;
    touchgfx::Image choose_deviceSetting;
    touchgfx::Image choose_circuitSetting;
    touchgfx::Image choose_deviceInfoSetting;
    touchgfx::Image choose_alarmSetting;
    touchgfx::Image choose_trendSetting;
    touchgfx::Image choose_patientInfoSetting;
    touchgfx::Image choose_ventilationSetting;
    touchgfx::Container container_bottomBar;
    touchgfx::Box bg_bottomBar;
    touchgfx::Box box8;
    touchgfx::Box box8_1;
    touchgfx::Box box8_1_1;
    touchgfx::Box box8_1_2;
    touchgfx::Box box8_1_1_1;
    touchgfx::Box box8_1_1_2;
    touchgfx::Box box8_1_2_1;
    touchgfx::TextAreaWithOneWildcard VTi_bar;
    touchgfx::TextArea textArea11;
    touchgfx::TextAreaWithOneWildcard RR_bar;
    touchgfx::TextArea textArea11_1;
    touchgfx::TextAreaWithOneWildcard PEEP_bar;
    touchgfx::TextArea textArea11_2;
    touchgfx::TextAreaWithOneWildcard PIP_bar;
    touchgfx::TextArea textArea11_3;
    touchgfx::TextAreaWithOneWildcard Flow_bar;
    touchgfx::TextArea textArea11_4;
    touchgfx::TextAreaWithOneWildcard Ti_bar;
    touchgfx::TextArea textArea11_5;
    touchgfx::TextAreaWithOneWildcard FiO2_bar;
    touchgfx::TextArea textArea11_6;
    touchgfx::TextAreaWithOneWildcard VTe_bar;
    touchgfx::TextArea textArea11_7;
    touchgfx::Container container_topBar;
    touchgfx::BoxProgress batteryProgress;
    touchgfx::Image charging_image;
    touchgfx::Image adult_image;
    touchgfx::Image child_image;
    touchgfx::TextAreaWithOneWildcard alarm_value_topBar;
    touchgfx::TextAreaWithOneWildcard DateTxt;
    touchgfx::Image image_singleLeakCircuit;
    touchgfx::Image image_singleCircuit;
    touchgfx::Image image_invasive_bar;
    touchgfx::Image image_mask_bar;
    touchgfx::Image alarm_imageYellow_bar;
    touchgfx::Image alarm_imageRed_bar;
    touchgfx::Image alarm_image_bar;
    touchgfx::Button activeAlarms_button;
    touchgfx::Image image_mute_bar;
    touchgfx::TextAreaWithOneWildcard mute_val;
    touchgfx::Image image_lock_bar;
    touchgfx::Image image_unlock_bar;
    touchgfx::Line line1_1;
    touchgfx::PainterRGB565 line1_1Painter;
    touchgfx::TextAreaWithOneWildcard textArea12;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXT_ALARMS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_alarmsBuffer[TEXT_ALARMS_SIZE];
    static const uint16_t TEXT_DEVICESBUFFER1_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_deviceSBuffer1[TEXT_DEVICESBUFFER1_SIZE];
    static const uint16_t TEXT_DEVICESBUFFER2_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_deviceSBuffer2[TEXT_DEVICESBUFFER2_SIZE];
    static const uint16_t TEXT_TRENDS_SIZE = 10;
    touchgfx::Unicode::UnicodeChar text_trendsBuffer[TEXT_TRENDS_SIZE];
    static const uint16_t VTI_BAR_SIZE = 5;
    touchgfx::Unicode::UnicodeChar VTi_barBuffer[VTI_BAR_SIZE];
    static const uint16_t RR_BAR_SIZE = 4;
    touchgfx::Unicode::UnicodeChar RR_barBuffer[RR_BAR_SIZE];
    static const uint16_t PEEP_BAR_SIZE = 5;
    touchgfx::Unicode::UnicodeChar PEEP_barBuffer[PEEP_BAR_SIZE];
    static const uint16_t PIP_BAR_SIZE = 5;
    touchgfx::Unicode::UnicodeChar PIP_barBuffer[PIP_BAR_SIZE];
    static const uint16_t FLOW_BAR_SIZE = 4;
    touchgfx::Unicode::UnicodeChar Flow_barBuffer[FLOW_BAR_SIZE];
    static const uint16_t TI_BAR_SIZE = 4;
    touchgfx::Unicode::UnicodeChar Ti_barBuffer[TI_BAR_SIZE];
    static const uint16_t FIO2_BAR_SIZE = 4;
    touchgfx::Unicode::UnicodeChar FiO2_barBuffer[FIO2_BAR_SIZE];
    static const uint16_t VTE_BAR_SIZE = 5;
    touchgfx::Unicode::UnicodeChar VTe_barBuffer[VTE_BAR_SIZE];
    static const uint16_t ALARM_VALUE_TOPBAR_SIZE = 25;
    touchgfx::Unicode::UnicodeChar alarm_value_topBarBuffer[ALARM_VALUE_TOPBAR_SIZE];
    static const uint16_t DATETXT_SIZE = 12;
    touchgfx::Unicode::UnicodeChar DateTxtBuffer[DATETXT_SIZE];
    static const uint16_t MUTE_VAL_SIZE = 3;
    touchgfx::Unicode::UnicodeChar mute_valBuffer[MUTE_VAL_SIZE];
    static const uint16_t TEXTAREA12_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea12Buffer[TEXTAREA12_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<SettingScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];
};

#endif // SETTINGSCREENVIEWBASE_HPP
