/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#include <stdarg.h>
#include <touchgfx/TextProvider.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/TypedText.hpp>
#include <touchgfx/Unicode.hpp>
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthRTL(TEXT_DIRECTION_LTR, text, pArg);
    va_end(pArg);
    return width;
}

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthRTL(textDirection, text, pArg);
    va_end(pArg);
    return width;
}

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    nextCharacters.replaceAt0(unicodeConverter(direction));
    if (fontGsubTable && nextCharacters.peekChar())
    {
        substituteGlyphs();
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
}

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
    unicodeConverterInit();
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
    va_list pArg;
    va_start(pArg, format);
    drawStringRTL(widgetArea, invalidatedArea, stringVisuals, format, pArg);
    va_end(pArg);
}

// Default TypedTextDatabase
extern const touchgfx::TypedText::TypedTextData* const typedTextDatabaseArray[];

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::Unicode::UnicodeChar texts_all_languages[] TEXT_LOCATION_FLASH_ATTRIBUTE = {
    0x2d, 0x20, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x28, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2c, 0x20, 0x41, 0x42, 0x20, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2c, 0x65, 0x74, 0x63, 0x29, 0xa, 0x2d, 0x20, 0x44, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0xa, 0x2d, 0x20, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x65, 0x6e, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x20, 0x6f, 0x70, 0x65, 0x6e, 0x0, // @0 "- Attach all circuit components(Humidifier, AB filter,etc)\n- Do not connect patient interfaces\n- Leave the patient end of the circuit open"
    0x2d, 0x20, 0x54, 0x75, 0x72, 0x6e, 0x20, 0x6f, 0x66, 0x66, 0x20, 0x6f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0xa, 0x2d, 0x20, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x20, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x0, // @139 "- Turn off oxygen\n- Disconnect all the circuits from the ventilator"
    0x54, 0x72, 0x61, 0x63, 0x68, 0x65, 0x64, 0x20, 0x6f, 0x72, 0x20, 0x45, 0x6e, 0x64, 0x6f, 0x74, 0x72, 0x61, 0x63, 0x68, 0x65, 0x61, 0x6c, 0x20, 0x74, 0x75, 0x62, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0xa, 0x61, 0x6e, 0x20, 0x69, 0x6e, 0x66, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x6f, 0x72, 0x20, 0x64, 0x65, 0x66, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x20, 0x63, 0x75, 0x66, 0x66, 0x0, // @207 "Trached or Endotracheal tube with\nan inflated or deflated cuff"
    0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0xa, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x62, 0x61, 0x73, 0x65, 0x20, 0x6f, 0x6e, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x20, 0x21, 0xa, 0x0, // @270 "Configuration will be\nchanged base on weight !\n"
    0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x62, 0x20, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x20, 0xa, 0x77, 0x69, 0x74, 0x68, 0x20, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x20, 0x76, 0x61, 0x6c, 0x76, 0x65, 0x0, // @318 "Single limb circuit \nwith expiratory valve"
    0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x6c, 0x69, 0x6d, 0x62, 0x20, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x20, 0xa, 0x77, 0x69, 0x74, 0x68, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x20, 0x6c, 0x65, 0x61, 0x6b, 0x0, // @361 "Single limb circuit \nwith intentional leak"
    0x41, 0x72, 0x65, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x73, 0x75, 0x72, 0x65, 0x3f, 0xa, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x20, 0x21, 0xa, 0x0, // @404 "Are you sure?\nscreen will be unlocked !\n"
    0x41, 0x72, 0x65, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x73, 0x75, 0x72, 0x65, 0x3f, 0xa, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0x20, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x20, 0x21, 0xa, 0x0, // @445 "Are you sure?\nscreen will be locked !\n"
    0x41, 0x72, 0x65, 0x20, 0x79, 0x6f, 0x75, 0x20, 0x73, 0x75, 0x72, 0x65, 0x3f, 0xa, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x73, 0x74, 0x6f, 0x70, 0x20, 0x21, 0xa, 0x0, // @484 "Are you sure?\nventilation will stop !\n"
    0x633, 0x64a, 0x62a, 0x645, 0x20, 0x62a, 0x63a, 0x64a, 0x64a, 0x631, 0x20, 0x627, 0x644, 0x62a, 0x643, 0x648, 0x64a, 0x646, 0xa, 0x21, 0x20, 0x639, 0x644, 0x649, 0x20, 0x623, 0x633, 0x627, 0x633, 0x20, 0x627, 0x644, 0x648, 0x632, 0x646, 0x0, // @523 "???? ????? ???????\n! ??? ???? ?????"
    0x4e, 0x6f, 0x6e, 0x20, 0x49, 0x6e, 0x76, 0x61, 0x73, 0x69, 0x76, 0x65, 0x20, 0x28, 0x4e, 0x56, 0x29, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x3a, 0x20, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x0, // @559 "Non Invasive (NV) mask: Interface"
    0x62a, 0x627, 0x62c, 0x62f, 0x20, 0x627, 0x648, 0x631, 0x20, 0x627, 0x646, 0x62f, 0x648, 0x62a, 0x631, 0x627, 0x62c, 0x644, 0x20, 0x62a, 0x6cc, 0x648, 0x628, 0x20, 0x648, 0x6cc, 0x62f, 0x20, 0x641, 0x644, 0x627, 0x646, 0x0, // @593 "???? ??? ????????? ???? ??? ????"
    0x6d, 0x6f, 0x64, 0x65, 0x73, 0x3a, 0x20, 0x43, 0x4d, 0x56, 0x2c, 0x20, 0x41, 0x43, 0x2c, 0x20, 0xa, 0x53, 0x49, 0x4d, 0x56, 0x2c, 0x20, 0x50, 0x53, 0x2c, 0x20, 0x43, 0x50, 0x41, 0x50, 0x0, // @626 "modes: CMV, AC, \nSIMV, PS, CPAP"
    0x633, 0x64a, 0x643, 0x648, 0x646, 0x20, 0x627, 0x644, 0x648, 0x636, 0x639, 0xa, 0x43, 0x50, 0x52, 0x20, 0x62a, 0x645, 0x20, 0x627, 0x644, 0x62a, 0x63a, 0x64a, 0x64a, 0x631, 0x20, 0x625, 0x644, 0x649, 0x20, 0x0, // @658 "????? ?????\nCPR ?? ??????? ??? "
    0x647, 0x644, 0x20, 0x627, 0x646, 0x62a, 0x20, 0x645, 0x62a, 0x623, 0x6a9, 0x62f, 0x61f, 0xa, 0x633, 0x648, 0x641, 0x20, 0x62a, 0x62a, 0x648, 0x642, 0x641, 0x20, 0x627, 0x644, 0x62a, 0x646, 0x641, 0x633, 0x0, // @690 "?? ??? ??????\n??? ????? ??????"
    0x62f, 0x627, 0x626, 0x631, 0x629, 0x20, 0x637, 0x631, 0x641, 0x20, 0x648, 0x627, 0x62d, 0x62f, 0xa, 0x645, 0x639, 0x20, 0x635, 0x645, 0x627, 0x645, 0x20, 0x627, 0x644, 0x632, 0x641, 0x64a, 0x631, 0x0, // @721 "????? ??? ????\n?? ???? ??????"
    0x647, 0x644, 0x20, 0x627, 0x646, 0x62a, 0x20, 0x645, 0x62a, 0x623, 0x6a9, 0x62f, 0x61f, 0xa, 0x633, 0x64a, 0x62a, 0x645, 0x20, 0x641, 0x62a, 0x62d, 0x20, 0x627, 0x644, 0x634, 0x627, 0x634, 0x629, 0x0, // @751 "?? ??? ??????\n???? ??? ??????"
    0x647, 0x644, 0x20, 0x627, 0x646, 0x62a, 0x20, 0x645, 0x62a, 0x623, 0x6a9, 0x62f, 0x61f, 0xa, 0x633, 0x64a, 0x62a, 0x645, 0x20, 0x642, 0x641, 0x644, 0x20, 0x627, 0x644, 0x634, 0x627, 0x634, 0x629, 0x0, // @781 "?? ??? ??????\n???? ??? ??????"
    0x4d, 0x6f, 0x64, 0x65, 0x20, 0x77, 0x69, 0x6c, 0x6c, 0x20, 0x62, 0x65, 0xa, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x43, 0x50, 0x52, 0x21, 0x0, // @811 "Mode will be\nchanged to CPR!"
    0x62f, 0x627, 0x626, 0x631, 0x629, 0x20, 0x637, 0x631, 0x641, 0x20, 0x648, 0x627, 0x62d, 0x62f, 0xa, 0x645, 0x639, 0x20, 0x62a, 0x633, 0x631, 0x628, 0x20, 0x645, 0x62a, 0x639, 0x645, 0x62f, 0x0, // @840 "????? ??? ????\n?? ???? ?????"
    0x642, 0x646, 0x627, 0x639, 0x20, 0x63a, 0x64a, 0x631, 0x20, 0x63a, 0x632, 0x648, 0x64a, 0x20, 0x28, 0x4e, 0x56, 0x29, 0x3a, 0x20, 0x627, 0x644, 0x648, 0x627, 0x62c, 0x647, 0x629, 0x0, // @869 "???? ??? ???? (NV): ???????"
    0x2d, 0x20, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x65, 0x6e, 0x64, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x0, // @897 "- Block end of the circuit"
    0x4c, 0x65, 0x61, 0x72, 0x6e, 0x20, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x20, 0x28, 0x70, 0x68, 0x61, 0x73, 0x65, 0x20, 0x31, 0x2f, 0x33, 0x29, 0x0, // @924 "Learn Circuit (phase 1/3)"
    0x4c, 0x65, 0x61, 0x72, 0x6e, 0x20, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x20, 0x28, 0x70, 0x68, 0x61, 0x73, 0x65, 0x20, 0x32, 0x2f, 0x33, 0x29, 0x0, // @950 "Learn Circuit (phase 2/3)"
    0x4c, 0x65, 0x61, 0x72, 0x6e, 0x20, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x20, 0x28, 0x70, 0x68, 0x61, 0x73, 0x65, 0x20, 0x33, 0x2f, 0x33, 0x29, 0x0, // @976 "Learn Circuit (phase 3/3)"
    0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x77, 0x61, 0x69, 0x74, 0xa, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x20, 0x2e, 0x20, 0x2e, 0x20, 0x2e, 0x0, // @1002 "Please wait\nTesting . . ."
    0x633, 0x627, 0x639, 0x627, 0x62a, 0x20, 0x62c, 0x647, 0x627, 0x632, 0x20, 0x627, 0x644, 0x62a, 0x646, 0x641, 0x633, 0x20, 0x627, 0x644, 0x635, 0x646, 0x627, 0x639, 0x6cc, 0x0, // @1028 "????? ???? ?????? ???????"
    0x646, 0x645, 0x648, 0x630, 0x62c, 0x20, 0x62c, 0x647, 0x627, 0x632, 0x20, 0x627, 0x644, 0x62a, 0x646, 0x641, 0x633, 0x20, 0x627, 0x644, 0x635, 0x646, 0x627, 0x639, 0x6cc, 0x0, // @1054 "????? ???? ?????? ???????"
    0x41, 0x6c, 0x61, 0x72, 0x6d, 0x20, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0, // @1080 "Alarm Disabled          "
    0x625, 0x635, 0x62f, 0x627, 0x631, 0x20, 0x62c, 0x647, 0x627, 0x632, 0x20, 0x627, 0x62a, 0x646, 0x641, 0x633, 0x20, 0x627, 0x644, 0x635, 0x646, 0x627, 0x639, 0x6cc, 0x0, // @1105 "????? ???? ????? ???????"
    0x6d, 0x6f, 0x64, 0x65, 0x73, 0x3a, 0x20, 0x50, 0x53, 0x2c, 0x20, 0xa, 0x43, 0x50, 0x41, 0x50, 0x2c, 0x20, 0x42, 0x69, 0x50, 0x41, 0x50, 0x0, // @1130 "modes: PS, \nCPAP, BiPAP"
    0x625, 0x639, 0x62f, 0x627, 0x62f, 0x627, 0x62a, 0x20, 0x627, 0x644, 0x646, 0x633, 0x62e, 0xa, 0x627, 0x644, 0x627, 0x62d, 0x62a, 0x64a, 0x627, 0x637, 0x64a, 0x0, // @1154 "??????? ?????\n?????????"
    0x3a, 0x648, 0x632, 0x646, 0x20, 0x627, 0x644, 0x645, 0x62b, 0x627, 0x644, 0x6cc, 0x20, 0x627, 0x644, 0x645, 0x631, 0x6cc, 0x636, 0x629, 0x20, 0x20, 0x0, // @1178 ":??? ??????? ???????  "
    0x4e, 0x65, 0x77, 0x20, 0x54, 0x65, 0x78, 0x74, 0x2, 0x2, 0x0, // @1201 "New Text<><>"
    0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x64, 0x2e, 0x61, 0x65, 0x20, 0x645, 0x634, 0x63a, 0x644, 0x20, 0x628, 0x648, 0x627, 0x633, 0x637, 0x629, 0x0, // @1212 "Paramed.ae ???? ??????"
    0x50, 0x6f, 0x77, 0x65, 0x72, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x64, 0x2e, 0x61, 0x65, 0x0, // @1235 "Powered by Paramed.ae"
    0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x20, 0x74, 0x79, 0x70, 0x65, 0x0, // @1257 "Select interface type"
    0x644, 0x627, 0x20, 0x62a, 0x648, 0x62c, 0x62f, 0x20, 0x628, 0x6cc, 0x627, 0x646, 0x627, 0x62a, 0x20, 0x645, 0x62d, 0x641, 0x648, 0x638, 0x629, 0x0, // @1279 "?? ???? ?????? ??????"
    0x49, 0x64, 0x65, 0x61, 0x6c, 0x20, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x28, 0x6b, 0x67, 0x29, 0x20, 0x20, 0x3a, 0x20, 0x0, // @1301 "Ideal weight(kg)  : "
    0x56, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xa, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x0, // @1322 "Ventilation\nSettings"
    0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x20, 0xa, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x0, // @1343 "Circuit \nDisconnect"
    0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x20, 0x54, 0x79, 0x70, 0x65, 0x0, // @1363 "Select Circuit Type"
    0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x54, 0x79, 0x70, 0x65, 0x0, // @1383 "Select Patient Type"
    0x62a, 0x634, 0x62e, 0x6cc, 0x635, 0x20, 0x627, 0x646, 0x642, 0x637, 0x627, 0x639, 0x20, 0x627, 0x644, 0x62a, 0x646, 0x641, 0x633, 0x0, // @1403 "????? ?????? ??????"
    0x62f, 0x627, 0x626, 0x631, 0x629, 0x20, 0x648, 0x627, 0x62d, 0x62f, 0x629, 0x20, 0x645, 0x639, 0x20, 0x62a, 0x633, 0x631, 0x628, 0x0, // @1423 "????? ????? ?? ????"
    0x648, 0x636, 0x639, 0x20, 0x627, 0x644, 0x646, 0x633, 0x62e, 0x20, 0x627, 0x644, 0x627, 0x62d, 0x62a, 0x64a, 0x627, 0x637, 0x64a, 0x0, // @1443 "??? ????? ?????????"
    0x56, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x0, // @1463 "Ventilator Version"
    0x2, 0x20, 0x3a, 0x20, 0x2, 0x0, // @1482 "<> : <>"
    0x56, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x20, 0x0, // @1488 "Ventilator Model "
    0x648, 0x642, 0x62a, 0x20, 0x627, 0x646, 0x642, 0x637, 0x627, 0x639, 0x20, 0x627, 0x644, 0x62a, 0x646, 0x641, 0x633, 0x0, // @1506 "??? ?????? ??????"
    0x2, 0x20, 0x20, 0x2, 0x0, // @1524 "<>  <>"
    0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0xa, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x0, // @1529 "Circuit\nSettings"
    0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x20, 0x6d, 0x61, 0x73, 0x6b, 0x20, 0x74, 0x79, 0x70, 0x65, 0x0, // @1546 "Select mask type"
    0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x57, 0x69, 0x74, 0x68, 0x20, 0x4c, 0x65, 0x61, 0x6b, 0x0, // @1563 "Single With Leak"
    0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x20, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x0, // @1580 "Software Version"
    0x56, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x20, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x0, // @1597 "Ventilator Hours"
    0x627, 0x644, 0x625, 0x639, 0x62f, 0x627, 0x62f, 0x627, 0x62a, 0xa, 0x627, 0x644, 0x62a, 0x646, 0x641, 0x633, 0x0, // @1614 "?????????\n??????"
    0x627, 0x644, 0x625, 0x639, 0x62f, 0x627, 0x62f, 0x627, 0x62a, 0xa, 0x627, 0x644, 0x62c, 0x647, 0x627, 0x632, 0x0, // @1631 "?????????\n??????"
    0x2, 0xa, 0x2, 0x0, // @1648 "<>\n<>"
    0x2, 0x3a, 0x2, 0x0, // @1652 "<>:<>"
    0x41, 0x70, 0x6e, 0x65, 0x61, 0x20, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x0, // @1656 "Apnea Detection"
    0x4e, 0x65, 0x77, 0x20, 0x54, 0x65, 0x78, 0x74, 0x2, 0x0, // @1672 "New Text<>"
    0x4e, 0x6f, 0xa, 0x53, 0x70, 0x6f, 0x6e, 0x74, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x74, 0x68, 0x0, // @1682 "No\nSpont.Breath"
    0x62a, 0x62d, 0x631, 0x6cc, 0x631, 0xa, 0x627, 0x644, 0x62a, 0x6a9, 0x648, 0x6cc, 0x646, 0x627, 0x62a, 0x0, // @1698 "?????\n?????????"
    0x62d, 0x62f, 0x62f, 0x20, 0x646, 0x648, 0x639, 0x20, 0x627, 0x644, 0x62f, 0x627, 0x626, 0x631, 0x629, 0x0, // @1714 "??? ??? ???????"
    0x62d, 0x62f, 0x62f, 0x20, 0x646, 0x648, 0x639, 0x20, 0x627, 0x644, 0x648, 0x627, 0x62c, 0x647, 0x629, 0x0, // @1730 "??? ??? ???????"
    0x645, 0x633, 0x62a, 0x634, 0x639, 0x631, 0x20, 0x627, 0x644, 0x623, 0x643, 0x633, 0x62c, 0x64a, 0x646, 0x0, // @1746 "?????? ????????"
    0x41, 0x6c, 0x61, 0x72, 0x6d, 0x20, 0x2b, 0xa, 0x41, 0x43, 0x2d, 0x50, 0x43, 0x56, 0x0, // @1762 "Alarm +\nAC-PCV"
    0x41, 0x6c, 0x61, 0x72, 0x6d, 0x20, 0x2b, 0xa, 0x41, 0x43, 0x2d, 0x56, 0x43, 0x56, 0x0, // @1777 "Alarm +\nAC-VCV"
    0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x20, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x0, // @1792 "Single Circuit"
    0x54, 0x65, 0x73, 0x74, 0x20, 0x72, 0x65, 0x73, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x3a, 0x0, // @1807 "Test resaults:"
    0x625, 0x635, 0x62f, 0x627, 0x631, 0x20, 0x627, 0x644, 0x628, 0x631, 0x646, 0x627, 0x645, 0x62c, 0x0, // @1822 "????? ????????"
    0x627, 0x637, 0x644, 0x627, 0x639, 0x627, 0x62a, 0x20, 0x627, 0x644, 0x62c, 0x647, 0x627, 0x632, 0x0, // @1837 "??????? ??????"
    0x62d, 0x62f, 0x62f, 0x20, 0x646, 0x648, 0x639, 0x20, 0x627, 0x644, 0x642, 0x646, 0x627, 0x639, 0x0, // @1852 "??? ??? ??????"
    0x62d, 0x62f, 0x62f, 0x20, 0x646, 0x648, 0x639, 0x20, 0x627, 0x644, 0x645, 0x631, 0x64a, 0x636, 0x0, // @1867 "??? ??? ??????"
    0x62f, 0x627, 0x626, 0x631, 0x629, 0x20, 0x6a9, 0x647, 0x631, 0x628, 0x627, 0x626, 0x6cc, 0x629, 0x0, // @1882 "????? ????????"
    0x645, 0x639, 0x644, 0x648, 0x645, 0x627, 0x62a, 0xa, 0x627, 0x644, 0x645, 0x631, 0x6cc, 0x636, 0x0, // @1897 "???????\n??????"
    0x646, 0x62a, 0x627, 0x626, 0x62c, 0x20, 0x627, 0x644, 0x625, 0x62e, 0x62a, 0x628, 0x627, 0x631, 0x0, // @1912 "????? ????????"
    0x41, 0x6c, 0x61, 0x72, 0x6d, 0x2b, 0xa, 0x41, 0x43, 0x2d, 0x56, 0x43, 0x56, 0x0, // @1927 "Alarm+\nAC-VCV"
    0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0xa, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x0, // @1941 "Config\nBackup"
    0x4c, 0x65, 0x61, 0x72, 0x6e, 0x20, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x0, // @1955 "Learn Circuit"
    0x4c, 0x65, 0x61, 0x72, 0x6e, 0x20, 0x63, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x0, // @1969 "Learn circuit"
    0x4e, 0x6f, 0x20, 0x44, 0x61, 0x74, 0x61, 0x20, 0x53, 0x61, 0x76, 0x65, 0x64, 0x0, // @1983 "No Data Saved"
    0x4f, 0x78, 0x79, 0x67, 0x65, 0x6e, 0x20, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x0, // @1997 "Oxygen sensor"
    0x53, 0x70, 0x6f, 0x6e, 0x74, 0xa, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x0, // @2011 "Spont\nTrigger"
    0x45, 0x64, 0x69, 0x74, 0xa, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x0, // @2025 "Edit\nConfigs"
    0x46, 0x6c, 0x6f, 0x77, 0x20, 0x28, 0x6d, 0x20, 0x62, 0x61, 0x72, 0x29, 0x0, // @2038 "Flow (m bar)"
    0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0xa, 0x49, 0x6e, 0x66, 0x6f, 0x0, // @2051 "Patient\nInfo"
    0x53, 0x49, 0x4d, 0x56, 0x2d, 0x56, 0x43, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0, // @2064 "SIMV-VC     "
    0x62a, 0x639, 0x644, 0x645, 0x20, 0x627, 0x644, 0x62f, 0x627, 0x626, 0x631, 0x629, 0x0, // @2077 "???? ???????"
    0x31, 0x32, 0x20, 0x53, 0x65, 0x70, 0x20, 0x32, 0x30, 0x32, 0x33, 0x0, // @2090 "12 Sep 2023"
    0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x20, 0x4d, 0x6f, 0x64, 0x65, 0x0, // @2102 "Backup Mode"
    0x43, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x2d, 0x4f, 0x66, 0x66, 0x0, // @2114 "Cycling-Off"
    0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x0, // @2126 "Description"
    0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0xa, 0x49, 0x6e, 0x66, 0x6f, 0x0, // @2138 "Device\nInfo"
    0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x20, 0x74, 0x65, 0x73, 0x74, 0x0, // @2150 "Device test"
    0x4f, 0x62, 0x73, 0x74, 0x72, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x0, // @2162 "Obstrcution"
    0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x20, 0x28, 0x29, 0x0, // @2174 "Pressure ()"
    0x53, 0x70, 0x6f, 0x6e, 0x74, 0xa, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x0, // @2186 "Spont\nCycle"
    0x56, 0x65, 0x6e, 0x74, 0xa, 0x53, 0x74, 0x6f, 0x70, 0x65, 0x64, 0x0, // @2198 "Vent\nStoped"
    0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x20, 0x28, 0x6d, 0x6c, 0x29, 0x0, // @2210 "Volume (ml)"
    0x62f, 0x627, 0x626, 0x631, 0x629, 0x20, 0x648, 0x627, 0x62d, 0x62f, 0x629, 0x0, // @2222 "????? ?????"
    0x646, 0x648, 0x639, 0x20, 0x627, 0x644, 0x645, 0x631, 0x6cc, 0x636, 0x629, 0x0, // @2234 "??? ???????"
    0x32, 0x30, 0x32, 0x32, 0x2d, 0x30, 0x36, 0x2d, 0x31, 0x38, 0x0, // @2246 "2022-06-18"
    0x32, 0x30, 0x32, 0x33, 0x2d, 0x30, 0x37, 0x2d, 0x32, 0x35, 0x0, // @2257 "2023-07-25"
    0x41, 0x6c, 0x61, 0x72, 0x6d, 0xa, 0x4f, 0x6e, 0x6c, 0x79, 0x0, // @2268 "Alarm\nOnly"
    0x41, 0x6c, 0x61, 0x72, 0x6d, 0x20, 0x4f, 0x6e, 0x6c, 0x79, 0x0, // @2279 "Alarm Only"
    0x41, 0x70, 0x6e, 0x65, 0x61, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x0, // @2290 "Apnea time"
    0x42, 0x72, 0x69, 0x67, 0x68, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x0, // @2301 "Brightness"
    0x4e, 0x6f, 0x6e, 0x20, 0x56, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x0, // @2312 "Non Vented"
    0x50, 0x75, 0x6c, 0x73, 0x65, 0xa, 0x52, 0x61, 0x74, 0x65, 0x0, // @2323 "Pulse\nRate"
    0x641, 0x62d, 0x635, 0x20, 0x627, 0x644, 0x62c, 0x647, 0x627, 0x632, 0x0, // @2334 "??? ??????"
    0x2, 0x20, 0x20, 0x0, // @2345 "<>  "
    0x4c, 0x6f, 0x77, 0x20, 0xa, 0x50, 0x45, 0x45, 0x50, 0x0, // @2349 "Low \nPEEP"
    0x4e, 0x6f, 0xa, 0x42, 0x72, 0x65, 0x61, 0x74, 0x68, 0x0, // @2359 "No\nBreath"
    0x4e, 0x6f, 0x20, 0x42, 0x72, 0x65, 0x61, 0x74, 0x68, 0x0, // @2369 "No Breath"
    0x50, 0x20, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x0, // @2379 "P Control"
    0x50, 0x2d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x0, // @2389 "P-Control"
    0x50, 0x65, 0x64, 0x69, 0x61, 0x74, 0x72, 0x69, 0x63, 0x0, // @2399 "Pediatric"
    0x52, 0x69, 0x73, 0x65, 0x20, 0x54, 0x69, 0x6d, 0x65, 0x0, // @2409 "Rise Time"
    0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x20, 0x56, 0x54, 0x0, // @2419 "Safety VT"
    0x2, 0x20, 0x0, // @2429 "<> "
    0x42, 0x69, 0x50, 0x41, 0x50, 0x2d, 0x53, 0x54, 0x0, // @2432 "BiPAP-ST"
    0x42, 0x69, 0x50, 0x41, 0x50, 0x5f, 0x53, 0x54, 0x0, // @2441 "BiPAP_ST"
    0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x0, // @2450 "Continue"
    0x49, 0x50, 0x41, 0x50, 0x20, 0x6d, 0x61, 0x78, 0x0, // @2459 "IPAP max"
    0x49, 0x6e, 0x76, 0x61, 0x73, 0x69, 0x76, 0x65, 0x0, // @2468 "Invasive"
    0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x0, // @2477 "Language"
    0x4e, 0x65, 0x77, 0x20, 0x54, 0x65, 0x78, 0x74, 0x0, // @2486 "New Text"
    0x50, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x0, // @2495 "Pressure"
    0x54, 0x69, 0x20, 0x70, 0x61, 0x75, 0x73, 0x65, 0x0, // @2504 "Ti pause"
    0x54, 0x69, 0x6d, 0x65, 0x20, 0x28, 0x73, 0x29, 0x0, // @2513 "Time (s)"
    0x56, 0x65, 0x6e, 0x75, 0x73, 0x20, 0x6c, 0x6c, 0x0, // @2522 "Venus ll"
    0x70, 0x72, 0x65, 0x73, 0x73, 0x75, 0x72, 0x65, 0x0, // @2531 "pressure"
    0x627, 0x644, 0x645, 0x62c, 0x62a, 0x627, 0x62d, 0x629, 0x0, // @2540 "????????"
    0x63a, 0x64a, 0x631, 0x20, 0x645, 0x646, 0x641, 0x633, 0x0, // @2549 "??? ????"
    0x645, 0x62f, 0x644, 0x20, 0x645, 0x631, 0x6cc, 0x636, 0x0, // @2558 "??? ????"
    0x43, 0x4d, 0x56, 0x2d, 0x50, 0x43, 0x56, 0x0, // @2567 "CMV-PCV"
    0x43, 0x4d, 0x56, 0x2d, 0x56, 0x43, 0x56, 0x0, // @2575 "CMV-VCV"
    0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x0, // @2583 "Confirm"
    0x45, 0x6e, 0x67, 0x6c, 0x69, 0x73, 0x68, 0x0, // @2591 "English"
    0x50, 0x2d, 0x43, 0x20, 0x6d, 0x61, 0x78, 0x0, // @2599 "P-C max"
    0x53, 0x49, 0x4d, 0x56, 0x2d, 0x50, 0x43, 0x0, // @2607 "SIMV-PC"
    0x53, 0x49, 0x4d, 0x56, 0x2d, 0x56, 0x43, 0x0, // @2615 "SIMV-VC"
    0x70, 0x65, 0x72, 0x20, 0x6d, 0x69, 0x6e, 0x0, // @2623 "per min"
    0x70, 0x72, 0x65, 0x73, 0x75, 0x72, 0x65, 0x0, // @2631 "presure"
    0x622, 0x644, 0x627, 0x631, 0x645, 0x627, 0x62a, 0x0, // @2639 "???????"
    0x627, 0x62a, 0x62c, 0x627, 0x647, 0x627, 0x62a, 0x0, // @2647 "???????"
    0x627, 0x646, 0x62c, 0x644, 0x6cc, 0x632, 0x64a, 0x0, // @2655 "???????"
    0x627, 0x646, 0x6a9, 0x644, 0x6cc, 0x633, 0x6cc, 0x0, // @2663 "???????"
    0x62a, 0x646, 0x638, 0x6cc, 0x645, 0x627, 0x62a, 0x0, // @2671 "???????"
    0x62a, 0x648, 0x636, 0x6cc, 0x62d, 0x627, 0x62a, 0x0, // @2679 "???????"
    0x645, 0x648, 0x627, 0x635, 0x641, 0x627, 0x62a, 0x0, // @2687 "???????"
    0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x0, // @2695 "123456"
    0x41, 0x6c, 0x61, 0x72, 0x6d, 0x73, 0x0, // @2702 "Alarms"
    0x41, 0x72, 0x61, 0x62, 0x69, 0x63, 0x0, // @2709 "Arabic"
    0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x0, // @2716 "Device"
    0x50, 0x53, 0x20, 0x6d, 0x61, 0x78, 0x0, // @2723 "PS max"
    0x54, 0x69, 0x20, 0x6d, 0x61, 0x78, 0x0, // @2730 "Ti max"
    0x54, 0x69, 0x20, 0x6d, 0x69, 0x6e, 0x0, // @2737 "Ti min"
    0x54, 0x72, 0x65, 0x6e, 0x64, 0x73, 0x0, // @2744 "Trends"
    0x63, 0x6d, 0x20, 0x68, 0x32, 0x6f, 0x0, // @2751 "cm h2o"
    0x6d, 0x6f, 0x64, 0x65, 0x20, 0x3a, 0x0, // @2758 "mode :"
    0x627, 0x644, 0x627, 0x6cc, 0x627, 0x645, 0x0, // @2765 "??????"
    0x627, 0x644, 0x639, 0x631, 0x628, 0x6cc, 0x0, // @2772 "??????"
    0x627, 0x644, 0x6a9, 0x628, 0x627, 0x631, 0x0, // @2779 "??????"
    0x628, 0x6cc, 0x627, 0x646, 0x627, 0x62a, 0x0, // @2786 "??????"
    0x31, 0x30, 0x2e, 0x32, 0x20, 0x0, // @2793 "10.2 "
    0x31, 0x30, 0x30, 0x30, 0x30, 0x0, // @2799 "10000"
    0x31, 0x32, 0x33, 0x34, 0x35, 0x0, // @2805 "12345"
    0x31, 0x33, 0x3a, 0x31, 0x33, 0x0, // @2811 "13:13"
    0x31, 0x37, 0x3a, 0x33, 0x32, 0x0, // @2817 "17:32"
    0x32, 0x2e, 0x30, 0x2e, 0x30, 0x0, // @2823 "2.0.0"
    0x32, 0x2e, 0x31, 0x2e, 0x30, 0x0, // @2829 "2.1.0"
    0x32, 0x33, 0x2e, 0x31, 0x20, 0x0, // @2835 "23.1 "
    0x41, 0x64, 0x75, 0x6c, 0x74, 0x0, // @2841 "Adult"
    0x41, 0x6c, 0x61, 0x72, 0x6d, 0x0, // @2847 "Alarm"
    0x41, 0x70, 0x6e, 0x65, 0x61, 0x0, // @2853 "Apnea"
    0x41, 0x75, 0x64, 0x69, 0x6f, 0x0, // @2859 "Audio"
    0x41, 0x76, 0x67, 0x2e, 0x50, 0x0, // @2865 "Avg.P"
    0x4c, 0x2f, 0x6d, 0x69, 0x6e, 0x0, // @2871 "L/min"
    0x4d, 0x6f, 0x64, 0x65, 0x3a, 0x0, // @2877 "Mode:"
    0x50, 0x20, 0x61, 0x74, 0x6d, 0x0, // @2883 "P atm"
    0x53, 0x68, 0x61, 0x70, 0x65, 0x0, // @2889 "Shape"
    0x53, 0x6c, 0x6f, 0x70, 0x65, 0x0, // @2895 "Slope"
    0x53, 0x74, 0x61, 0x72, 0x74, 0x0, // @2901 "Start"
    0x63, 0x6d, 0x48, 0x32, 0x4f, 0x0, // @2907 "cmH2O"
    0x65, 0x6d, 0x70, 0x74, 0x79, 0x0, // @2913 "empty"
    0x625, 0x646, 0x630, 0x627, 0x631, 0x0, // @2919 "?????"
    0x627, 0x637, 0x641, 0x627, 0x644, 0x0, // @2925 "?????"
    0x627, 0x644, 0x633, 0x627, 0x646, 0x0, // @2931 "?????"
    0x627, 0x644, 0x645, 0x648, 0x62f, 0x0, // @2937 "?????"
    0x62a, 0x627, 0x6cc, 0x6cc, 0x62f, 0x0, // @2943 "?????"
    0x648, 0x636, 0x639, 0x20, 0x3a, 0x0, // @2949 "??? :"
    0x64a, 0x62a, 0x62e, 0x637, 0x649, 0x0, // @2955 "?????"
    0x6cc, 0x62a, 0x623, 0x6a9, 0x62f, 0x0, // @2961 "?????"
    0x30, 0x2e, 0x35, 0x20, 0x0, // @2967 "0.5 "
    0x30, 0x31, 0x30, 0x30, 0x0, // @2972 "0100"
    0x30, 0x32, 0x30, 0x30, 0x0, // @2977 "0200"
    0x30, 0x33, 0x35, 0x30, 0x0, // @2982 "0350"
    0x30, 0x38, 0x30, 0x30, 0x0, // @2987 "0800"
    0x31, 0x2e, 0x32, 0x20, 0x0, // @2992 "1.2 "
    0x31, 0x2e, 0x32, 0x33, 0x0, // @2997 "1.23"
    0x31, 0x30, 0x2e, 0x31, 0x0, // @3002 "10.1"
    0x31, 0x30, 0x30, 0x30, 0x0, // @3007 "1000"
    0x31, 0x32, 0x2e, 0x31, 0x0, // @3012 "12.1"
    0x31, 0x32, 0x2e, 0x32, 0x0, // @3017 "12.2"
    0x31, 0x32, 0x33, 0x34, 0x0, // @3022 "1234"
    0x31, 0x33, 0x2e, 0x34, 0x0, // @3027 "13.4"
    0x32, 0x2e, 0x33, 0x35, 0x0, // @3032 "2.35"
    0x33, 0x35, 0x30, 0x20, 0x0, // @3037 "350 "
    0x33, 0x35, 0x34, 0x20, 0x0, // @3042 "354 "
    0x34, 0x39, 0x38, 0x20, 0x0, // @3047 "498 "
    0x34, 0x39, 0x39, 0x20, 0x0, // @3052 "499 "
    0x35, 0x30, 0x30, 0x20, 0x0, // @3057 "500 "
    0x35, 0x30, 0x32, 0x20, 0x0, // @3062 "502 "
    0x35, 0x30, 0x37, 0x20, 0x0, // @3067 "507 "
    0x43, 0x4d, 0x50, 0x4c, 0x0, // @3072 "CMPL"
    0x44, 0x61, 0x74, 0x61, 0x0, // @3077 "Data"
    0x44, 0x61, 0x74, 0x65, 0x0, // @3082 "Date"
    0x45, 0x50, 0x41, 0x50, 0x0, // @3087 "EPAP"
    0x46, 0x69, 0x4f, 0x32, 0x0, // @3092 "FiO2"
    0x46, 0x6c, 0x6f, 0x77, 0x0, // @3097 "Flow"
    0x48, 0x46, 0x4e, 0x43, 0x0, // @3102 "HFNC"
    0x49, 0x50, 0x41, 0x50, 0x0, // @3107 "IPAP"
    0x4d, 0x61, 0x73, 0x6b, 0x0, // @3112 "Mask"
    0x52, 0x53, 0x42, 0x49, 0x0, // @3117 "RSBI"
    0x53, 0x50, 0x4f, 0x32, 0x0, // @3122 "SPO2"
    0x53, 0x65, 0x6e, 0x73, 0x0, // @3127 "Sens"
    0x53, 0x6b, 0x69, 0x70, 0x0, // @3132 "Skip"
    0x66, 0x6c, 0x6f, 0x77, 0x0, // @3137 "flow"
    0x632, 0x645, 0x627, 0x646, 0x0, // @3142 "????"
    0x633, 0x637, 0x648, 0x639, 0x0, // @3147 "????"
    0x639, 0x631, 0x628, 0x64a, 0x0, // @3152 "????"
    0x648, 0x636, 0x639, 0x3a, 0x0, // @3157 "???:"
    0x64a, 0x628, 0x62f, 0x623, 0x0, // @3162 "????"
    0x6cc, 0x6a9, 0x645, 0x644, 0x0, // @3167 "????"
    0x30, 0x31, 0x30, 0x0, // @3172 "010"
    0x31, 0x2e, 0x31, 0x0, // @3176 "1.1"
    0x31, 0x2e, 0x32, 0x0, // @3180 "1.2"
    0x31, 0x32, 0x33, 0x0, // @3184 "123"
    0x31, 0x35, 0x20, 0x0, // @3188 "15 "
    0x31, 0x38, 0x20, 0x0, // @3192 "18 "
    0x31, 0x38, 0x30, 0x0, // @3196 "180"
    0x32, 0x20, 0x20, 0x0, // @3200 "2  "
    0x32, 0x2e, 0x36, 0x0, // @3204 "2.6"
    0x32, 0x30, 0x20, 0x0, // @3208 "20 "
    0x32, 0x31, 0x20, 0x0, // @3212 "21 "
    0x32, 0x32, 0x20, 0x0, // @3216 "22 "
    0x33, 0x30, 0x20, 0x0, // @3220 "30 "
    0x33, 0x30, 0x30, 0x0, // @3224 "300"
    0x34, 0x20, 0x20, 0x0, // @3228 "4  "
    0x36, 0x30, 0x30, 0x0, // @3232 "600"
    0x37, 0x37, 0x20, 0x0, // @3236 "77 "
    0x43, 0x50, 0x52, 0x0, // @3240 "CPR"
    0x49, 0x3a, 0x45, 0x0, // @3244 "I:E"
    0x49, 0x50, 0x50, 0x0, // @3248 "IPP"
    0x4d, 0x56, 0x65, 0x0, // @3252 "MVe"
    0x4d, 0x56, 0x69, 0x0, // @3256 "MVi"
    0x4f, 0x46, 0x46, 0x0, // @3260 "OFF"
    0x50, 0x45, 0x46, 0x0, // @3264 "PEF"
    0x50, 0x49, 0x46, 0x0, // @3268 "PIF"
    0x50, 0x49, 0x50, 0x0, // @3272 "PIP"
    0x50, 0x53, 0x56, 0x0, // @3276 "PSV"
    0x52, 0x65, 0x73, 0x0, // @3280 "Res"
    0x53, 0x65, 0x70, 0x0, // @3284 "Sep"
    0x53, 0x75, 0x6e, 0x0, // @3288 "Sun"
    0x56, 0x54, 0x65, 0x0, // @3292 "VTe"
    0x56, 0x54, 0x69, 0x0, // @3296 "VTi"
    0x56, 0x74, 0x65, 0x0, // @3300 "Vte"
    0x56, 0x74, 0x69, 0x0, // @3304 "Vti"
    0x62, 0x70, 0x6d, 0x0, // @3308 "bpm"
    0x6c, 0x70, 0x6d, 0x0, // @3312 "lpm"
    0x635, 0x648, 0x62a, 0x0, // @3316 "???"
    0x644, 0x63a, 0x629, 0x0, // @3320 "???"
    0x648, 0x636, 0x639, 0x0, // @3324 "???"
    0x648, 0x642, 0x62a, 0x0, // @3328 "???"
    0x30, 0x33, 0x0, // @3332 "03"
    0x31, 0x32, 0x0, // @3335 "12"
    0x31, 0x3a, 0x0, // @3338 "1:"
    0x32, 0x30, 0x0, // @3341 "20"
    0x33, 0x30, 0x0, // @3344 "30"
    0x36, 0x30, 0x0, // @3347 "60"
    0x48, 0x52, 0x0, // @3350 "HR"
    0x4f, 0x4e, 0x0, // @3353 "ON"
    0x50, 0x53, 0x0, // @3356 "PS"
    0x52, 0x52, 0x0, // @3359 "RR"
    0x6d, 0x6c, 0x0, // @3362 "ml"
    0x25, 0x0, // @3365 "%"
    0x2c, 0x0, // @3367 ","
    0x75, 0x0 // @3369 "u"
};

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern uint32_t const indicesGb[] TEXT_LOCATION_FLASH_ATTRIBUTE;

TEXT_LOCATION_FLASH_PRAGMA
KEEP extern uint32_t const indicesArb[] TEXT_LOCATION_FLASH_ATTRIBUTE;

// Array holding dynamically installed languages
struct TranslationHeader
{
    uint32_t offset_to_texts;
    uint32_t offset_to_indices;
    uint32_t offset_to_typedtext;
};
static const TranslationHeader* languagesArray[2] = { 0 };

// Compiled and linked in languages
static const uint32_t* const staticLanguageIndices[] = {
    indicesGb,
    indicesArb
};

touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 2)
    {
        if (languagesArray[id] != 0)
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
            currentLanguageIndices = staticLanguageIndices[id];
            currentLanguageTypedText = typedTextDatabaseArray[id];
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
    }
}

void touchgfx::Texts::setTranslation(touchgfx::LanguageId id, const void* translation)
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
}
